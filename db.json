[{"id":"f8649b8b-2b88-4a16-bae8-5ef85b07ee3d","texto":"[]","dataCriacao":1610411516197},{"id":"8ae1da7d-b81b-4560-8fe5-c88d59c94880","texto":"[{\"id\":\"f8649b8b-2b88-4a16-bae8-5ef85b07ee3d\",\"texto\":\"[]\",\"dataCriacao\":1610411516197}]","dataCriacao":1610411518379},{"id":"f0d383a2-414e-436d-b5f7-960df94218bb","texto":"\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | ","dataCriacao":1610411537407},{"id":"899f0386-fe71-4142-826c-3a4b52b1bcda","texto":"SVGComponentTransferFunctionElement","dataCriacao":1610411561304},{"id":"97a6cbc1-41fe-45fb-870b-b5b3b681df20","texto":"function getAkk","dataCriacao":1610411580445},{"id":"2d9165f7-b21f-4551-9881-f925860aaa3a","texto":"let data = JSON.parse(fs.readFileSync('db.json'));","dataCriacao":1610411587617},{"id":"f74e769c-6c06-4b2f-a93a-7c4b6990ab11","texto":"elemento","dataCriacao":1610411674285},{"id":"f26c92a4-912b-4d3f-b925-41cc83829894","texto":"dblclick","dataCriacao":1610411725557},{"id":"00784769-a974-423a-8f1c-97da33c7e530","texto":"SVGComponentTransferFunctionElement","dataCriacao":1610411834554},{"id":"7d564313-d5f1-4734-9766-72af62b64141","texto":"let data = JSON.parse(fs.readFileSync('db.json'));","dataCriacao":1610411850786},{"id":"de59c404-f928-404c-817b-2f9c3f668485","texto":"elemento","dataCriacao":1610411850966},{"id":"8aeaffec-fb68-468a-86f9-ab8652866330","texto":"SVGComponentTransferFunctionElement","dataCriacao":1610411854779},{"id":"443e7b48-abf2-427e-be2e-4163cf50c19e","texto":"let data = JSON.parse(fs.readFileSync('db.json'));","dataCriacao":1610411855011},{"id":"6a7c78b5-dcb8-4e16-a1b6-64dd2f6eeb07","texto":"elemento","dataCriacao":1610411858593},{"id":"8fd167c4-2b6d-4281-943e-87c8ddd98ff9","texto":"SVGComponentTransferFunctionElement","dataCriacao":1610411858871},{"id":"77aeb2ee-d708-4764-a712-d8eaebd485b6","texto":"let data = JSON.parse(fs.readFileSync('db.json'));","dataCriacao":1610411859467},{"id":"1e539694-dda8-4b3f-b147-e1e629a1af84","texto":"elemento","dataCriacao":1610411859763},{"id":"78ed31fb-80fa-42e9-810a-bd5218aa043e","texto":"SVGComponentTransferFunctionElement","dataCriacao":1610411860130},{"id":"96e0cf9e-6317-4aca-93a8-3c8e2160d968","texto":"let data = JSON.parse(fs.readFileSync('db.json'));","dataCriacao":1610411860358},{"id":"ffb460c9-398e-4b22-9760-b67f16c41045","texto":"elemento","dataCriacao":1610411860593},{"id":"d8cfff45-bd69-4ded-a36b-7b8c6eca5bdd","texto":"SVGComponentTransferFunctionElement","dataCriacao":1610411860757},{"id":"e4dbc59e-dbc1-4b39-8a87-ee7548bcedad","texto":"let data = JSON.parse(fs.readFileSync('db.json'));","dataCriacao":1610411860938},{"id":"9b509300-acc2-4654-9dd1-1243b1dc8cdc","texto":"elemento","dataCriacao":1610411861146},{"id":"38c466e1-64af-4900-ad3e-68497edb1440","texto":"SVGComponentTransferFunctionElement","dataCriacao":1610411861334},{"id":"256d5d89-5117-4c73-9478-8bd634114d3b","texto":"let data = JSON.parse(fs.readFileSync('db.json'));","dataCriacao":1610411861534},{"id":"56dc7bba-6857-40ec-aa39-5caa4605b721","texto":"elemento","dataCriacao":1610411861719},{"id":"87f68ca2-b551-483f-90c3-eeff99150bb2","texto":"SVGComponentTransferFunctionElement","dataCriacao":1610411864423},{"id":"529f9877-975e-4b55-9107-4d48fcc71129","texto":"let data = JSON.parse(fs.readFileSync('db.json'));","dataCriacao":1610411865856},{"id":"54ca9739-c464-4254-a088-e5c6caab7cef","texto":"elemento","dataCriacao":1610411867600},{"id":"7f1fc031-279a-4fc4-ac70-c914a96e279f","texto":"SVGComponentTransferFunctionElement","dataCriacao":1610411867767},{"id":"64c66dcc-f208-45f7-ad00-2581389bf9fa","texto":"let data = JSON.parse(fs.readFileSync('db.json'));","dataCriacao":1610411869986},{"id":"3756c2dc-3914-49b6-8eba-1d148ac5a4b5","texto":"elemento","dataCriacao":1610411871802},{"id":"66a20722-633c-42ac-b1f2-fd97e4369a3a","texto":"SVGComponentTransferFunctionElement","dataCriacao":1610411871991},{"id":"6657b2e1-51cd-44d2-812a-5924e5703003","texto":"elemento","dataCriacao":1610411931645},{"id":"7f34b8fe-62ff-4506-8bf7-c6435cf5cb56","texto":"[{\"id\":\"f8649b8b-2b88-4a16-bae8-5ef85b07ee3d\",\"texto\":\"[]\",\"dataCriacao\":1610411516197}]","dataCriacao":1610411973057},{"id":"d84fa8ff-b443-4b20-806b-efadd553094e","texto":"\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | ","dataCriacao":1610411975058},{"id":"de4bb2b2-7056-48c4-8c2c-d721fa3f0011","texto":"SVGComponentTransferFunctionElement","dataCriacao":1610411975692},{"id":"eb0343de-120a-4e52-89ad-a5a292ca78ed","texto":"let data = JSON.parse(fs.readFileSync('db.json'));","dataCriacao":1610411977072},{"id":"145d0890-9e1a-49c6-8a90-00855d636234","texto":"[]","dataCriacao":1610443138343},{"id":"91f3f5c5-9740-4c57-b186-51c9c9a5d2f5","texto":"\n      ","dataCriacao":1610443286272},{"id":"056ca6bb-7874-45d4-9f8e-47e633a0bdec","texto":"renderItem(item);","dataCriacao":1610443413497},{"id":"f52deeb2-722b-4a90-950d-1a3e335010b4","texto":"uuidv4","dataCriacao":1610443421072},{"id":"8a7ec1db-af7d-4d19-afb7-8144291bee41","texto":"dados.id = uuidv4();","dataCriacao":1610443422760},{"id":"bba03383-9c49-41b3-afee-6b3d38839feb","texto":".crae;","dataCriacao":1610443501401},{"id":"c826f41c-1d5b-4da1-977b-df0d9cde92e9","texto":"dados.id = uuidv4();","dataCriacao":1610443517108},{"id":"99f56521-78d3-4bd3-8917-a5b19d1c1b04","texto":"item","dataCriacao":1610443538528},{"id":"6b640b14-65ce-4c20-b045-3969c477edb8","texto":"{id: uuidv4(), texto: item, dataCriacao: Date.now() }","dataCriacao":1610443545695},{"id":"cbb6c4c7-4305-445a-8492-fa460e29f778","texto":"item","dataCriacao":1610443552440},{"id":"0829e32a-ffee-4d8c-ac9f-af9c4d6d83df","texto":"{id: uuidv4(), texto: item, dataCriacao: Date.now() }","dataCriacao":1610443576915},{"id":"20c1741d-0bcf-44a9-93d3-8f991affa969","texto":"item","dataCriacao":1610443613145},{"id":"e48e9723-6337-45c4-bf81-36a110e7a867","texto":"delete li from ul javascript","dataCriacao":1610443646129},{"id":"46d96550-fc33-47ef-8959-d2c28d923d90","texto":"\n  elemento.id = item.id;\n\n  elemento.addEventListener('dblclick', () => { console.log(\"Deletou!\"); });\n","dataCriacao":1610444603871},{"id":"8fc3e7b6-a47c-435d-9ff0-39b36197a4ef","texto":"clipboard","dataCriacao":1610444629713},{"id":"5ceaa578-68c4-447d-a49e-9ab78dcabb32","texto":"{id: uuidv4(), texto: item, dataCriacao: Date.now() }","dataCriacao":1610444651117},{"id":"c46bffe7-c2d2-4f0d-8060-b960e0fd2470","texto":"item","dataCriacao":1610444652269},{"id":"d39b2a2a-e12d-40e2-a975-83cd2447b99f","texto":"delete li from ul javascript","dataCriacao":1610444653009},{"id":"fc24458e-37bb-4a64-8398-9bfc74e5abfc","texto":"{id: uuidv4(), texto: item, dataCriacao: Date.now() }","dataCriacao":1610444667932},{"id":"d2b396c5-2aaf-4168-9c1f-03bb76e36268","texto":"clipboard","dataCriacao":1610444670931},{"id":"3154dd3b-1202-4991-9e64-609f13c051ad","texto":"ul = document.getElementById(\"copies\");\n  li = ul.getElementsByClassName('list-item');","dataCriacao":1610444805198},{"id":"37b12883-282c-46c6-814c-1b7935bd43f6","texto":"for (let i = 0; i < li.length; i++) {\n    txtValue = li[i].textContent || li[i].innerText;\n    txtValue.toUpperCase().indexOf(filter) > -1 ?\n    li[i].style.display = \"\" :\n    li[i].style.display = \"none\" ;\n  }","dataCriacao":1610444814526},{"id":"4ccb20e4-3b35-4783-86cc-7377a9b3aa07","texto":"innerHTML = '';","dataCriacao":1610444901286},{"id":"12d602ea-ea87-439f-aac2-31a24932afd5","texto":"li[i].style.display = \"none\" ;","dataCriacao":1610444916959},{"id":"b17c8277-a56e-4d6f-b955-762e48fa01f2","texto":"li[i].innerText = \"\"","dataCriacao":1610444939446},{"id":"f4228f57-8f51-4dfc-9cb9-86ed7843e627","texto":".toLocaleString()","dataCriacao":1610448234239},{"id":"9bd41213-9434-46bb-8029-dc39c47ea3e4","texto":".replace(/T/, ' ').replace(/\\..+/, '')","dataCriacao":1610448351876},{"id":"f7e3a9cc-17af-4a09-afc4-329f97995631","texto":".toISOString().replace(/T/, ' ').replace(/\\..+/, '')","dataCriacao":1610448407474},{"id":"ca5c68c7-55a4-4b07-95fc-ad97b9694508","texto":"('23/12/2021')","dataCriacao":1610448464490},{"id":"e9d73789-7eeb-4aee-ae9c-2fcaf54f6bff","texto":".toISOString().replace(/T/, ' ').replace(/\\..+/, '')","dataCriacao":1610448634911},{"id":"304b39ef-a397-46e5-9fa6-8290746c736a","texto":"('23/12/2021')","dataCriacao":1610448638021},{"id":"f7a6c76a-7ba7-4c7d-b37b-9779880a4a9c","texto":"\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | ","dataCriacao":1610448661432},{"id":"27fccff7-91c7-4e3a-803b-372af5407c32","texto":"mainWindow.on('minimize',function(event){\n    event.preventDefault();\n    mainWindow.hide();\n});\n\nmainWindow.on('close', function (event) {\n    if(!application.isQuiting){\n        event.preventDefault();\n        mainWindow.hide();\n    }\n\n    return false;\n});","dataCriacao":1610448969040},{"id":"d5c1eca1-bb9c-40df-9be0-c4f3e08f1976","texto":"var contextMenu = Menu.buildFromTemplate([\n    { label: 'Show App', click:  function(){\n        mainWindow.show();\n    } },\n    { label: 'Quit', click:  function(){\n        application.isQuiting = true;\n        application.quit();\n    } }\n]);","dataCriacao":1610449115477},{"id":"8dfc4d7b-3fa6-46a3-be7d-73c5fe72455d","texto":"const {remote} = require('electron')\n         const {Tray, Menu} = remote","dataCriacao":1610449548675},{"id":"54aebfa0-45b9-4638-85f9-734e969fd766","texto":"sem-parar-1.png","dataCriacao":1610450841478},{"id":"8bc1a11d-30bd-4c73-b4a9-65ed73a47d68","texto":"application","dataCriacao":1610451016477},{"id":"ab132c06-d7a7-437c-84b9-9a73bfcfa8ed","texto":"\"use strict\";\n\n// [run the app]\n// $ npm install electron\n// $ ./node_modules/.bin/electron .\n\nconst {app, nativeImage, Tray, Menu, BrowserWindow} = require(\"electron\");\n\nlet top = {}; // prevent gc to keep windows\n\napp.once(\"ready\", ev => {\n    top.win = new BrowserWindow({\n        width: 800, height: 600, center: true, minimizable: false, show: false,\n        webPreferences: {\n            nodeIntegration: false,\n            webSecurity: true,\n            sandbox: true,\n        },                                \n    });\n    top.win.loadURL(\"https://google.com/\");\n    top.win.on(\"close\", ev => {\n        //console.log(ev);\n        ev.sender.hide();\n        ev.preventDefault(); // prevent quit process\n    });\n\n    // empty image as transparent icon: it can click\n    // see: https://electron.atom.io/docs/api/tray/\n    top.tray = new Tray(nativeImage.createEmpty());\n    const menu = Menu.buildFromTemplate([\n        {label: \"Actions\", submenu: [\n            {label: \"Open Google\", click: (item, window, event) => {\n                //console.log(item, event);\n                top.win.show();\n            }},\n        ]},\n        {type: \"separator\"},\n        {role: \"quit\"}, // \"role\": system prepared action menu\n    ]);\n    top.tray.setToolTip(\"hello electrol\");\n    //top.tray.setTitle(\"Tray Example\"); // macOS only\n    top.tray.setContextMenu(menu);\n\n    // Option: some animated web site to tray icon image\n    // see: https://electron.atom.io/docs/tutorial/offscreen-rendering/\n    top.icons = new BrowserWindow({\n        show: false, webPreferences: {offscreen: true}});\n    top.icons.loadURL(\"https://trends.google.com/trends/hottrends/visualize\");\n    top.icons.webContents.on(\"paint\", (event, dirty, image) => {\n        if (top.tray) top.tray.setImage(image.resize({width: 16, height: 16}));\n    });\n});\napp.on(\"before-quit\", ev => {\n    // BrowserWindow \"close\" event spawn after quit operation,\n    // it requires to clean up listeners for \"close\" event\n    top.win.removeAllListeners(\"close\");\n    // release windows\n    top = null;\n});","dataCriacao":1610451341473},{"id":"65f86094-91d9-45da-b993-e1dff02db76b","texto":"const { app, BrowserWindow, ipcMain, Tray, Menu, application } = require('electron');\n\nlet mainWindow = null;\napp.on('ready', () => {\n  let mainWindow = new BrowserWindow({\n    width: 400,\n    height: 500,\n    webPreferences: {\n      nodeIntegration: true\n    },\n  });\n\n  mainWindow.loadURL(`file://${__dirname}/app/index.html`);\n\n  mainWindow.on('minimize', function (event) {\n    event.preventDefault();\n    mainWindow.hide();\n  });\n\n  mainWindow.on('close', function (event) {\n    if (!application.isQuiting) {\n      event.preventDefault();\n      mainWindow.hide();\n    }\n\n    return false;\n  });\n\n  var contextMenu = Menu.buildFromTemplate([\n    {\n      label: 'Show App', click: function () {\n        mainWindow.show();\n      }\n    },\n    {\n      label: 'Quit', click: function () {\n        application.isQuiting = true;\n        application.quit();\n      }\n    }\n  ]);\n\n  let trayMenu = new Tray('sem-parar-1.png');\n  trayMenu.setContextMenu(contextMenu);\n\n});\n\n// ipcMain.on('abrir-janela-sobre', () => {\n//   let sobreWindow = new BrowserWindow({\n//     width: 300,\n//     height: 200,\n//   });\n\n//   sobreWindow.loadURL(`file://${__dirname}/app/sobre.html`);\n// });\n\napp.on('window-all-closed', () => {\n  app.quit();\n});\n","dataCriacao":1610451352430},{"id":"ab6e4021-0c70-4d5f-b190-7b88ce92bb00","texto":"\"use strict\";\n\n// [run the app]\n// $ npm install electron\n// $ ./node_modules/.bin/electron .\n\nconst {app, nativeImage, Tray, Menu, BrowserWindow} = require(\"electron\");\n\nlet top = {}; // prevent gc to keep windows\n\napp.once(\"ready\", ev => {\n    top.win = new BrowserWindow({\n        width: 800, height: 600, center: true, minimizable: false, show: false,\n        webPreferences: {\n            nodeIntegration: false,\n            webSecurity: true,\n            sandbox: true,\n        },                                \n    });\n    top.win.loadURL(\"https://google.com/\");\n    top.win.on(\"close\", ev => {\n        //console.log(ev);\n        ev.sender.hide();\n        ev.preventDefault(); // prevent quit process\n    });\n\n    // empty image as transparent icon: it can click\n    // see: https://electron.atom.io/docs/api/tray/\n    top.tray = new Tray(nativeImage.createEmpty());\n    const menu = Menu.buildFromTemplate([\n        {label: \"Actions\", submenu: [\n            {label: \"Open Google\", click: (item, window, event) => {\n                //console.log(item, event);\n                top.win.show();\n            }},\n        ]},\n        {type: \"separator\"},\n        {role: \"quit\"}, // \"role\": system prepared action menu\n    ]);\n    top.tray.setToolTip(\"hello electrol\");\n    //top.tray.setTitle(\"Tray Example\"); // macOS only\n    top.tray.setContextMenu(menu);\n\n    // Option: some animated web site to tray icon image\n    // see: https://electron.atom.io/docs/tutorial/offscreen-rendering/\n    top.icons = new BrowserWindow({\n        show: false, webPreferences: {offscreen: true}});\n    top.icons.loadURL(\"https://trends.google.com/trends/hottrends/visualize\");\n    top.icons.webContents.on(\"paint\", (event, dirty, image) => {\n        if (top.tray) top.tray.setImage(image.resize({width: 16, height: 16}));\n    });\n});\napp.on(\"before-quit\", ev => {\n    // BrowserWindow \"close\" event spawn after quit operation,\n    // it requires to clean up listeners for \"close\" event\n    top.win.removeAllListeners(\"close\");\n    // release windows\n    top = null;\n});","dataCriacao":1610451361969},{"id":"dba50937-4556-4d45-bde9-d8592a8d9c32","texto":"app.on('window-all-closed', () => {\n  if (process.platform !== 'darwin') {\n    app.quit();\n  }\n});\n","dataCriacao":1610451669853},{"id":"e99cffe4-1f4d-4842-840e-b7a18a79c481","texto":"\n  });\n\n  var contextMenu = Menu.buildFromTemplate([\n    {","dataCriacao":1610456258070},{"id":"d18dea53-2b64-4f6c-a2cb-e41ad190dfc8","texto":"\"use strict\";\n\n// [run the app]\n// $ npm install electron\n// $ ./node_modules/.bin/electron .\n\nconst {app, nativeImage, Tray, Menu, BrowserWindow} = require(\"electron\");\n\nlet top = {}; // prevent gc to keep windows\n\napp.once(\"ready\", ev => {\n    top.win = new BrowserWindow({\n        width: 800, height: 600, center: true, minimizable: false, show: false,\n        webPreferences: {\n            nodeIntegration: false,\n            webSecurity: true,\n            sandbox: true,\n        },                                \n    });\n    top.win.loadURL(\"https://google.com/\");\n    top.win.on(\"close\", ev => {\n        //console.log(ev);\n        ev.sender.hide();\n        ev.preventDefault(); // prevent quit process\n    });\n\n    // empty image as transparent icon: it can click\n    // see: https://electron.atom.io/docs/api/tray/\n    top.tray = new Tray(nativeImage.createEmpty());\n    const menu = Menu.buildFromTemplate([\n        {label: \"Actions\", submenu: [\n            {label: \"Open Google\", click: (item, window, event) => {\n                //console.log(item, event);\n                top.win.show();\n            }},\n        ]},\n        {type: \"separator\"},\n        {role: \"quit\"}, // \"role\": system prepared action menu\n    ]);\n    top.tray.setToolTip(\"hello electrol\");\n    //top.tray.setTitle(\"Tray Example\"); // macOS only\n    top.tray.setContextMenu(menu);\n\n    // Option: some animated web site to tray icon image\n    // see: https://electron.atom.io/docs/tutorial/offscreen-rendering/\n    top.icons = new BrowserWindow({\n        show: false, webPreferences: {offscreen: true}});\n    top.icons.loadURL(\"https://trends.google.com/trends/hottrends/visualize\");\n    top.icons.webContents.on(\"paint\", (event, dirty, image) => {\n        if (top.tray) top.tray.setImage(image.resize({width: 16, height: 16}));\n    });\n});\napp.on(\"before-quit\", ev => {\n    // BrowserWindow \"close\" event spawn after quit operation,\n    // it requires to clean up listeners for \"close\" event\n    top.win.removeAllListeners(\"close\");\n    // release windows\n    top = null;\n});","dataCriacao":1610456417092},{"id":"f08e478e-8e88-41e9-9370-159221310819","texto":"https://www.youtube.com/watch?v=IKydZtF9I3w","dataCriacao":1610456861469},{"id":"22f0f6d5-901e-4650-a3b9-2b1bcdab5b0d","texto":"copied","dataCriacao":1610457193658},{"id":"a58a1477-0341-4e45-a43a-3063602502c3","texto":"reflection","dataCriacao":1610457790044},{"id":"385d32e7-b59c-4cef-abd5-6a71107c4ae0","texto":"var contextMenu = Menu.buildFromTemplate([\n    { label: 'Show App', click:  function(){\n        mainWindow.show();\n    } },\n    { label: 'Quit', click:  function(){\n        application.isQuiting = true;\n        application.quit();\n    } }\n]);","dataCriacao":1610458034474},{"id":"0ca4c2cc-de82-4dfe-845e-b7bf6ae893f1","texto":"mainWindow.on('minimize',function(event){\n    event.preventDefault();\n    mainWindow.hide();\n});\n\nmainWindow.on('close', function (event) {\n    if(!application.isQuiting){\n        event.preventDefault();\n        mainWindow.hide();\n    }\n\n    return false;\n});","dataCriacao":1610458036222},{"id":"5318f363-4b60-4fee-9587-db6850ec4e00","texto":"\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | ","dataCriacao":1610458036775},{"id":"cb8a6ec1-f582-4488-8820-db211f69f18d","texto":"('23/12/2021')","dataCriacao":1610458328179},{"id":"c6e44390-dd1f-40c3-9e6d-c0fdb55449ff","texto":"\"use strict\";\n\n// [run the app]\n// $ npm install electron\n// $ ./node_modules/.bin/electron .\n\nconst {app, nativeImage, Tray, Menu, BrowserWindow} = require(\"electron\");\n\nlet top = {}; // prevent gc to keep windows\n\napp.once(\"ready\", ev => {\n    top.win = new BrowserWindow({\n        width: 800, height: 600, center: true, minimizable: false, show: false,\n        webPreferences: {\n            nodeIntegration: false,\n            webSecurity: true,\n            sandbox: true,\n        },                                \n    });\n    top.win.loadURL(\"https://google.com/\");\n    top.win.on(\"close\", ev => {\n        //console.log(ev);\n        ev.sender.hide();\n        ev.preventDefault(); // prevent quit process\n    });\n\n    // empty image as transparent icon: it can click\n    // see: https://electron.atom.io/docs/api/tray/\n    top.tray = new Tray(nativeImage.createEmpty());\n    const menu = Menu.buildFromTemplate([\n        {label: \"Actions\", submenu: [\n            {label: \"Open Google\", click: (item, window, event) => {\n                //console.log(item, event);\n                top.win.show();\n            }},\n        ]},\n        {type: \"separator\"},\n        {role: \"quit\"}, // \"role\": system prepared action menu\n    ]);\n    top.tray.setToolTip(\"hello electrol\");\n    //top.tray.setTitle(\"Tray Example\"); // macOS only\n    top.tray.setContextMenu(menu);\n\n    // Option: some animated web site to tray icon image\n    // see: https://electron.atom.io/docs/tutorial/offscreen-rendering/\n    top.icons = new BrowserWindow({\n        show: false, webPreferences: {offscreen: true}});\n    top.icons.loadURL(\"https://trends.google.com/trends/hottrends/visualize\");\n    top.icons.webContents.on(\"paint\", (event, dirty, image) => {\n        if (top.tray) top.tray.setImage(image.resize({width: 16, height: 16}));\n    });\n});\napp.on(\"before-quit\", ev => {\n    // BrowserWindow \"close\" event spawn after quit operation,\n    // it requires to clean up listeners for \"close\" event\n    top.win.removeAllListeners(\"close\");\n    // release windows\n    top = null;\n});","dataCriacao":1610458386812},{"id":"e3f1e75f-788a-4f51-aae0-346244f465da","texto":"list-item","dataCriacao":1610458444069},{"id":"91d7344e-b294-4a34-a05b-3a6d46457869","texto":"\"use strict\";\n\n// [run the app]\n// $ npm install electron\n// $ ./node_modules/.bin/electron .\n\nconst {app, nativeImage, Tray, Menu, BrowserWindow} = require(\"electron\");\n\nlet top = {}; // prevent gc to keep windows\n\napp.once(\"ready\", ev => {\n    top.win = new BrowserWindow({\n        width: 800, height: 600, center: true, minimizable: false, show: false,\n        webPreferences: {\n            nodeIntegration: false,\n            webSecurity: true,\n            sandbox: true,\n        },                                \n    });\n    top.win.loadURL(\"https://google.com/\");\n    top.win.on(\"close\", ev => {\n        //console.log(ev);\n        ev.sender.hide();\n        ev.preventDefault(); // prevent quit process\n    });\n\n    // empty image as transparent icon: it can click\n    // see: https://electron.atom.io/docs/api/tray/\n    top.tray = new Tray(nativeImage.createEmpty());\n    const menu = Menu.buildFromTemplate([\n        {label: \"Actions\", submenu: [\n            {label: \"Open Google\", click: (item, window, event) => {\n                //console.log(item, event);\n                top.win.show();\n            }},\n        ]},\n        {type: \"separator\"},\n        {role: \"quit\"}, // \"role\": system prepared action menu\n    ]);\n    top.tray.setToolTip(\"hello electrol\");\n    //top.tray.setTitle(\"Tray Example\"); // macOS only\n    top.tray.setContextMenu(menu);\n\n    // Option: some animated web site to tray icon image\n    // see: https://electron.atom.io/docs/tutorial/offscreen-rendering/\n    top.icons = new BrowserWindow({\n        show: false, webPreferences: {offscreen: true}});\n    top.icons.loadURL(\"https://trends.google.com/trends/hottrends/visualize\");\n    top.icons.webContents.on(\"paint\", (event, dirty, image) => {\n        if (top.tray) top.tray.setImage(image.resize({width: 16, height: 16}));\n    });\n});\napp.on(\"before-quit\", ev => {\n    // BrowserWindow \"close\" event spawn after quit operation,\n    // it requires to clean up listeners for \"close\" event\n    top.win.removeAllListeners(\"close\");\n    // release windows\n    top = null;\n});","dataCriacao":1610458505220},{"id":"d1bedf35-0376-474b-bca4-3a49751fe03d","texto":"mainWindow","dataCriacao":1610458675067},{"id":"d2a083d7-d13c-4820-b4c1-d6ad26d22858","texto":"\"use strict\";\n\n// [run the app]\n// $ npm install electron\n// $ ./node_modules/.bin/electron .\n\nconst {app, nativeImage, Tray, Menu, BrowserWindow} = require(\"electron\");\n\nlet top = {}; // prevent gc to keep windows\n\napp.once(\"ready\", ev => {\n    top.win = new BrowserWindow({\n        width: 800, height: 600, center: true, minimizable: false, show: false,\n        webPreferences: {\n            nodeIntegration: false,\n            webSecurity: true,\n            sandbox: true,\n        },                                \n    });\n    top.win.loadURL(\"https://google.com/\");\n    top.win.on(\"close\", ev => {\n        //console.log(ev);\n        ev.sender.hide();\n        ev.preventDefault(); // prevent quit process\n    });\n\n    // empty image as transparent icon: it can click\n    // see: https://electron.atom.io/docs/api/tray/\n    top.tray = new Tray(nativeImage.createEmpty());\n    const menu = Menu.buildFromTemplate([\n        {label: \"Actions\", submenu: [\n            {label: \"Open Google\", click: (item, window, event) => {\n                //console.log(item, event);\n                top.win.show();\n            }},\n        ]},\n        {type: \"separator\"},\n        {role: \"quit\"}, // \"role\": system prepared action menu\n    ]);\n    top.tray.setToolTip(\"hello electrol\");\n    //top.tray.setTitle(\"Tray Example\"); // macOS only\n    top.tray.setContextMenu(menu);\n\n    // Option: some animated web site to tray icon image\n    // see: https://electron.atom.io/docs/tutorial/offscreen-rendering/\n    top.icons = new BrowserWindow({\n        show: false, webPreferences: {offscreen: true}});\n    top.icons.loadURL(\"https://trends.google.com/trends/hottrends/visualize\");\n    top.icons.webContents.on(\"paint\", (event, dirty, image) => {\n        if (top.tray) top.tray.setImage(image.resize({width: 16, height: 16}));\n    });\n});\napp.on(\"before-quit\", ev => {\n    // BrowserWindow \"close\" event spawn after quit operation,\n    // it requires to clean up listeners for \"close\" event\n    top.win.removeAllListeners(\"close\");\n    // release windows\n    top = null;\n});","dataCriacao":1610458725609},{"id":"d96cd544-fdad-4e57-a2bc-fdc5bd26d0ec","texto":"\n  border-radius: 20px;","dataCriacao":1610459057360},{"id":"9621d634-eff4-40a0-8955-4dec0a38625a","texto":"elemento","dataCriacao":1610459059486},{"id":"98ee25ff-68f7-4c8c-8e84-71dff215a162","texto":"list-","dataCriacao":1610459765051},{"id":"374c92fb-100a-4061-acd5-3f1d9a741785","texto":"  globalShortcut.register(\"\", () => []);\n","dataCriacao":1610460282757},{"id":"72292df2-6b2a-4f5b-b519-bbc1fa620f5e","texto":"mainWindow.show();","dataCriacao":1610460325809},{"id":"38cb8675-fc75-4318-ac7c-fa5b1f89aab5","texto":"  globalShortcut.register(\"\", () => []);\n","dataCriacao":1610460332003},{"id":"6d871075-8f80-4177-b6db-c46bc0b667c3","texto":"\n  border-radius: 20px;","dataCriacao":1610460408515},{"id":"c5adc903-ab4c-4466-8b47-0be2bad30b8e","texto":"mainWindow.show();","dataCriacao":1610460458968},{"id":"43b5661d-cefb-4656-8704-45da426c0a91","texto":"list-","dataCriacao":1610460481208},{"id":"b2afde76-0eb0-475a-a817-3e8166d619fd","texto":"  globalShortcut.register(\"\", () => []);\n","dataCriacao":1610460517645},{"id":"8dd37730-cbed-4f43-8d34-771371864db2","texto":"  globalShortcut.register(\"G\", () => { console.log(\"Lo\"); });\n","dataCriacao":1610460604657},{"id":"a4c74a87-a91b-4d6e-a789-fe437c7672bf","texto":"mainWindow.show();","dataCriacao":1610460658662},{"id":"441a590a-397f-4ece-8642-69fb6acf66dd","texto":"    }\n","dataCriacao":1610460676067},{"id":"81f086e5-e273-4e1c-ad41-0965bec3701a","texto":"autofocus","dataCriacao":1610460983065},{"id":"57cbc34a-132f-4c20-b49d-960604c155eb","texto":"auto","dataCriacao":1610461166341},{"id":"2daf7d53-fe72-4c06-a30a-5f808555868e","texto":"autofocus","dataCriacao":1610461171414},{"id":"ec997026-4d1d-47b3-94b0-a1b883939eef","texto":"auto","dataCriacao":1610461175668},{"id":"2080538f-9854-4368-a28d-60051b17275f","texto":"electron show window in mouse point","dataCriacao":1610461249067},{"id":"3b1837b2-55cb-4efc-b7b0-6bb51b88020f","texto":"// get the mouse position\n    let mousePos = electron.screen.getCursorScreenPoint();\n    console.log(mousePos);","dataCriacao":1610461306067},{"id":"6d9cd67c-af04-4e01-b7c6-2c2895a40581","texto":"html focus in input","dataCriacao":1610461395069},{"id":"ce49a258-3f03-4cc1-b6c2-bd71ff8b8e9c","texto":"mainWindow","dataCriacao":1610461474068},{"id":"4614f80b-47cd-4350-a7e9-960bc686da61","texto":"html focus in input","dataCriacao":1610461597919},{"id":"7df2170e-75bb-41f3-8a20-0e6c4c47ae1d","texto":"// get the mouse position\n    let mousePos = electron.screen.getCursorScreenPoint();\n    console.log(mousePos);","dataCriacao":1610461638340},{"id":"8b40ea77-29be-4e5b-a996-3abb16879bd3","texto":"word-wrap: break-word;","dataCriacao":1610461695624},{"id":"3fec2b80-f86d-4b65-b42b-3b0e0f1720f6","texto":"\"use strict\";\n\n// [run the app]\n// $ npm install electron\n// $ ./node_modules/.bin/electron .\n\nconst {app, nativeImage, Tray, Menu, BrowserWindow} = require(\"electron\");\n\nlet top = {}; // prevent gc to keep windows\n\napp.once(\"ready\", ev => {\n    top.win = new BrowserWindow({\n        width: 800, height: 600, center: true, minimizable: false, show: false,\n        webPreferences: {\n            nodeIntegration: false,\n            webSecurity: true,\n            sandbox: true,\n        },                                \n    });\n    top.win.loadURL(\"https://google.com/\");\n    top.win.on(\"close\", ev => {\n        //console.log(ev);\n        ev.sender.hide();\n        ev.preventDefault(); // prevent quit process\n    });\n\n    // empty image as transparent icon: it can click\n    // see: https://electron.atom.io/docs/api/tray/\n    top.tray = new Tray(nativeImage.createEmpty());\n    const menu = Menu.buildFromTemplate([\n        {label: \"Actions\", submenu: [\n            {label: \"Open Google\", click: (item, window, event) => {\n                //console.log(item, event);\n                top.win.show();\n            }},\n        ]},\n        {type: \"separator\"},\n        {role: \"quit\"}, // \"role\": system prepared action menu\n    ]);\n    top.tray.setToolTip(\"hello electrol\");\n    //top.tray.setTitle(\"Tray Example\"); // macOS only\n    top.tray.setContextMenu(menu);\n\n    // Option: some animated web site to tray icon image\n    // see: https://electron.atom.io/docs/tutorial/offscreen-rendering/\n    top.icons = new BrowserWindow({\n        show: false, webPreferences: {offscreen: true}});\n    top.icons.loadURL(\"https://trends.google.com/trends/hottrends/visualize\");\n    top.icons.webContents.on(\"paint\", (event, dirty, image) => {\n        if (top.tray) top.tray.setImage(image.resize({width: 16, height: 16}));\n    });\n});\napp.on(\"before-quit\", ev => {\n    // BrowserWindow \"close\" event spawn after quit operation,\n    // it requires to clean up listeners for \"close\" event\n    top.win.removeAllListeners(\"close\");\n    // release windows\n    top = null;\n});","dataCriacao":1610461715553},{"id":"64eccf32-8613-4fa4-86bd-1b2c333a66a9","texto":"('23/12/2021')","dataCriacao":1610461740418},{"id":"9bdb722d-0973-43c3-b9e1-0fdf636629ae","texto":"globalShortcut.register(\"Shift+Control+c\", () => { mainWindow.show(); });","dataCriacao":1610461818286},{"id":"f412ced5-61b3-4357-b7f7-860faca9fdc3","texto":"screen","dataCriacao":1610462521069},{"id":"91ac2897-9c90-4707-9719-554e522d9e51","texto":"globalShortcut.register(\"Shift+Control+c\", () => { mainWindow.show(); });","dataCriacao":1610462616493},{"id":"d06bd1c5-e82c-4e08-81ad-ea517bf45954","texto":"\"use strict\";\n\n// [run the app]\n// $ npm install electron\n// $ ./node_modules/.bin/electron .\n\nconst {app, nativeImage, Tray, Menu, BrowserWindow} = require(\"electron\");\n\nlet top = {}; // prevent gc to keep windows\n\napp.once(\"ready\", ev => {\n    top.win = new BrowserWindow({\n        width: 800, height: 600, center: true, minimizable: false, show: false,\n        webPreferences: {\n            nodeIntegration: false,\n            webSecurity: true,\n            sandbox: true,\n        },                                \n    });\n    top.win.loadURL(\"https://google.com/\");\n    top.win.on(\"close\", ev => {\n        //console.log(ev);\n        ev.sender.hide();\n        ev.preventDefault(); // prevent quit process\n    });\n\n    // empty image as transparent icon: it can click\n    // see: https://electron.atom.io/docs/api/tray/\n    top.tray = new Tray(nativeImage.createEmpty());\n    const menu = Menu.buildFromTemplate([\n        {label: \"Actions\", submenu: [\n            {label: \"Open Google\", click: (item, window, event) => {\n                //console.log(item, event);\n                top.win.show();\n            }},\n        ]},\n        {type: \"separator\"},\n        {role: \"quit\"}, // \"role\": system prepared action menu\n    ]);\n    top.tray.setToolTip(\"hello electrol\");\n    //top.tray.setTitle(\"Tray Example\"); // macOS only\n    top.tray.setContextMenu(menu);\n\n    // Option: some animated web site to tray icon image\n    // see: https://electron.atom.io/docs/tutorial/offscreen-rendering/\n    top.icons = new BrowserWindow({\n        show: false, webPreferences: {offscreen: true}});\n    top.icons.loadURL(\"https://trends.google.com/trends/hottrends/visualize\");\n    top.icons.webContents.on(\"paint\", (event, dirty, image) => {\n        if (top.tray) top.tray.setImage(image.resize({width: 16, height: 16}));\n    });\n});\napp.on(\"before-quit\", ev => {\n    // BrowserWindow \"close\" event spawn after quit operation,\n    // it requires to clean up listeners for \"close\" event\n    top.win.removeAllListeners(\"close\");\n    // release windows\n    top = null;\n});","dataCriacao":1610462647641},{"id":"ff90e563-2213-41de-b165-0784acd2e505","texto":"pelo que eu entendi, é a mesma jornada o que muda é o fluxo que ela vai tomar... ","dataCriacao":1610462892067},{"id":"2e8fce37-799d-4cd4-a204-76bfd4c336e1","texto":"7 jornadas","dataCriacao":1610462972296},{"id":"66f4952c-4460-483a-8f51-03140990b0e6","texto":"teste","dataCriacao":1610463856353},{"id":"7f8fe6bd-2e5e-4a48-b671-aaa181bac3a2","texto":"globalShortcut.register(\"Shift+Control+x\", () => { mainWindow.hide(); });","dataCriacao":1610463880065},{"id":"6b91f03b-b336-45ed-9449-5d39a004786d","texto":"screen.getDisplayNearestPoint(point)\n","dataCriacao":1610463968975},{"id":"717b9303-e387-46e7-aeff-4a7aab39a1e0","texto":"screen.getDisplayNearestPoint(mouse)","dataCriacao":1610464018070},{"id":"d2828cc7-d9ad-4948-8423-d5dfc2791873","texto":"  let mouse = screen.getCursorScreenPoint();","dataCriacao":1610464058168},{"id":"f4fee379-5bab-406f-b03e-08a7c3b70ad0","texto":"mouse","dataCriacao":1610464063388},{"id":"e55e5215-2d36-4a05-bb87-70deb50c38db","texto":"x: mouse.x;","dataCriacao":1610464078067},{"id":"0f94380f-b5f6-4ee2-910a-f6b2e556c0b0","texto":"x: mouse.x,","dataCriacao":1610464081069},{"id":"916db005-055c-4cd8-9756-6c2e6f13aa73","texto":"\n\n  console.log(mouse);\n  mainWindow;getDisplayNearestPoint(mouse);","dataCriacao":1610464122451},{"id":"6805da7a-59d7-4bda-910f-729a6027ccd7","texto":" + 50","dataCriacao":1610464144066},{"id":"6077a8da-1c28-42e1-b44b-ae1ce8bf1edb","texto":"let mouse = screen.getCursorScreenPoint();","dataCriacao":1610464268066},{"id":"87b99e3b-0b82-4bb0-aa2f-f26c819cedb6","texto":"screen.getCursorScreenPoint()","dataCriacao":1610464272069},{"id":"77ed0a6c-1c28-45b1-bdd1-2e180920f8b9","texto":"getMousePosition()","dataCriacao":1610464282068},{"id":"ed4ba88a-ddca-48ee-a9d8-be6950c972ed","texto":"let mouse = getMousePosition();","dataCriacao":1610464313066},{"id":"58d90ab5-a03a-4833-a6e5-483dfff465fc","texto":"mainWindow","dataCriacao":1610464363070},{"id":"594d18c5-5d3b-4de0-8a55-d896cfbd942b","texto":"mainWindow.x = getMousePosition().x;","dataCriacao":1610464377069},{"id":"4cfa3629-1fdf-4fbb-b67c-912b98f2456f","texto":"showMainWindow","dataCriacao":1610464406069},{"id":"9e438015-81e1-4dc6-976b-f59706330a85","texto":"showMainWindow(mainWindow);","dataCriacao":1610464425069},{"id":"ad59e10a-df69-472b-bfe4-a8c8a80c7d49","texto":"x = getMousePosition().x;","dataCriacao":1610464666070},{"id":"185be0e2-c65e-45a2-821c-38ddda8c75d3","texto":" w.setPosition(x, y);","dataCriacao":1610464686069},{"id":"b2128ec0-5d2a-4849-a8df-ea2818c0920b","texto":"x: mouse.x;","dataCriacao":1610464876249}]